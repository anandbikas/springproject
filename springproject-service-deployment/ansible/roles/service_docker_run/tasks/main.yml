---
- name: Removing older container
  command: bash -c "docker ps -a | grep {{ service_name }} | awk '{print $1}' | xargs -I % sh -c 'docker stop % && docker rm -f %'"
  ignore_errors: yes

- name: Removing older images
  command: bash -c "docker rmi -f $(docker images -a | grep ^{{ service_group }}/{{ service_name }} | awk '{print $3}')"
  ignore_errors: yes
  when: (local_image == "true" and soft == "false")

- name: Creating docker locally
  command: "mvn -f {{ pom_path }} clean package -DskipTests -Dcobertura.skip=true -Djacoco.skip=true -Pdocker"
  when: (local_image == "true" and soft == "false")

- name: Pulling docker image from registry
  command: docker pull {{ docker_image }}
  when: (local_image == "false" and soft == "false")

- name: Running container with specific configuration
  command: docker run --restart always --name={{ service_name }} -d
          -v {{ docker_target_dir }}/conf:{{ app_home }}/conf
          -v {{ docker_target_dir }}/logs:{{ app_home }}/logs
          -v {{ docker_target_dir }}/ssl:{{ app_home }}/ssl
          {{ tomcat_service_port_forward }}
          {{ service_debug_port_forward }}
          {{ docker_image }}

  register: command_output

- set_fact:
    container_id: "{{ command_output.stdout }}"
